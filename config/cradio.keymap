// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
//#include <dt-binding/zmk/behavior-com

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4


// &lt {
//     flavor = "hold-preferred";
//     tapping-term-ms = <300>;
//     quick-tap-ms = <290>;
// };
// &mt {
//     flavor = "tap-preferred";
//     tapping-term-ms = <180>;
// };

/ {
    behaviors {
        // ht: hold_tap {
        //     label = "hold_tap";
        //     compatible = "zmk,behavior-hold-tap";
        //     #binding-cells = <2>;
        //     flavor = "tap-preferred";
        //     tapping-term-ms = <220>;
        //     quick-tap-ms = <150>;
        //     global-quick-tap;
        //     bindings = <&kp>, <&kp>;
        // };
        // lt: layer_tap {
        //     label = "layer_tap";
        //     flavor = "hold-preferred";
        //     compatible = "zmk,behavior-hold-tap";
        //     tapping-term-ms = <230>;
        //     quick-tap-ms = <100>;
        //     bindings = <&kp>, <&kp>;
        // };
        lt_h: layer_tap_hold_preferred {
            label = "layer_tap_hold_preferred"; 
            flavor = "hold-preferred";
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        // combo_esc {
        //     timeout-ms = <30>;
        //     key-positions = <0 1>;
        //     bindings = <&kp ESC>;
        // };
        // combo_bootloader {
        //     timeout-ms = <50>;
        //     key-positions = <0 1 2 3 4>;
        //     bindings = <&bootloader>;
        // };
        // combo_bootloader_both {
        //     timeout-ms = <70>;
        //     key-positions = <0 1 2 3 6 7 8 9>;
        //     bindings = <&bootloader>;
        // };

        // Enter and semi
        combo_enter_right {
            timeout-ms = <160>;
            key-positions = <16 17 18>;
            bindings = <&kp ENTER>;
            layers = <0 1 2>;
        };
        combo_enter_left {
            timeout-ms = <160>;
            key-positions = <11 12 13>;
            bindings = <&kp ENTER>;
            layers = <0 1 2>;
        };
        combo_semicolon_right {
            timeout-ms = <200>;
            // slow-release;
            // key-positions = <6 7 8 9>;
            key-positions = <16 17 18 19>;
            bindings = <&kp SEMICOLON>;
            layers = <0>;
        };

        // Used for doc formatting in VS Code
        combo_shift_alt_f {
            timeout-ms = <160>;
            key-positions = <10 11 12 13>;
            bindings = <&kp LS(LA(F))>;
            layers = <0>;
        };
        
        // Esc
        combo_esc_left {
            timeout-ms = <100>;
            key-positions = <0 1 2 3>;
            bindings = <&kp ESC>;
        };

        // Backspace and delete
        // combo_delete_right {
        //     timeout-ms = <150>;
        //     key-positions = <7 8 9>;
        //     bindings = <&kp DEL>;
        //     layers = <0>;
        // };
        combo_backspace_left {
            timeout-ms = <80>;
            key-positions = <1 2 3>;
            bindings = <&kp BACKSPACE>;
        };
        combo_delete_left {
            timeout-ms = <100>;
            key-positions = <0 1 2>;
            bindings = <&kp DEL>;
        };

        // To fix accidental two key preseses with right thumb
        // combo_rightspaces {
        //     timeout-ms = <110>;
        //     key-positions = <32 33>;
        //     bindings = <&kp SPACE>;
        // };

        // The control layers
        combo_controllayerleft {
            timeout-ms = <220>;
            slow-release;
            key-positions = <1 2 3 4>;
            bindings = <&mo 3>;
            layers = <0>;
        };
        combo_controllayerright {
            timeout-ms = <220>;
            key-positions = <5 6 7 8>;
            slow-release;
            bindings = <&mo 3>;
            layers = <0>;
        };

        // Alt and Ctrl
        combo_leftcontrol {
            timeout-ms = <90>;
            key-positions = <20 21 22>;
            // Doing slow release here only for the left hand so ctrl-c will be easy
            slow-release;
            bindings = <&kp LGUI>;
            layers = <0>;
        };
        combo_rightcontrol {
            timeout-ms = <90>;
            key-positions = <27 28 29>;
            bindings = <&kp RGUI>;
            layers = <0>;
        };
        combo_leftalt {
            timeout-ms = <90>;
            key-positions = <22 23 24>;
            bindings = <&kp LALT>;
            layers = <0>;
        };
        combo_rightalt {
            timeout-ms = <90>;
            key-positions = <25 26 27>;
            bindings = <&kp RALT>;
            layers = <0>;
        };

        // Clipboard with right hand
        cut_right {
            timeout-ms = <120>;
            key-positions = <15 16 17 18>;
            bindings = <&kp LC(X)>;
            layers = <0>;
        };
        copy_right {
            timeout-ms = <120>;
            key-positions = <6 7 8 9>;
            bindings = <&kp LC(C)>;
            layers = <0>;
        };
        paste_right {
            timeout-ms = <120>;
            key-positions =<26 27 28 29>;
            bindings = <&kp LC(V)>;
            layers = <0>;
        };
    };

    // conditional_layers {
    //     compatible = "zmk,conditional-layers";
    //     tri_layer {
    //         if-layers = <1 2>;
    //         then-layer = <3>;
    //     };
    // };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
            &kp A        &kp S     &kp D         &kp F     &kp G        &kp H     &kp  J      &kp   K      &kp L    &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │    C     │  V       │    B     │   │    N       │  M       │ , <      │ . >    │ / ?      │
        &mt LSHFT Z      &kp X      &kp C      &kp V      &kp B          &kp N   &kp M    &kp COMMA    &kp DOT    &mt RSHFT FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &kp LCTRL   &lt_h 2 TAB     &lt 1 SPACE   &kp RCTRL    
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp GRAVE  &kp LA(LEFT) &kp UARW &kp LA(RIGHT) &kp LBRC       &kp F10    &kp F11   &kp BSPC    &kp DEL    &kp F12
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp HOME   &kp LEFT   &kp DARW   &kp RIGHT   &kp END          &kp F9     &kp F4    &kp F5      &kp F6     &kp F7
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &mt LSHFT UNDER &kp LBKT    &kp RBKT   &kp LPAR   &kp RPAR         &kp F8     &kp F1    &kp F2      &kp F3    &mt RSHFT BSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans    &lt_h 2 ESC      &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // can be combined: ;: \| [{ `~ 
        // need: `~ \| [ ] { } ( ) _ 
        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp GRAVE  &kp LA(LEFT) &kp UARW &kp LA(RIGHT) &kp LBRC    &kp PLUS    &kp N7   &kp N8    &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp HOME   &kp LEFT   &kp DARW   &kp RIGHT   &kp END       &kp EQUAL    &kp N4    &kp N5      &kp N6    &kp PERIOD
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
          &mt LSHFT UNDER &kp LBKT    &kp RBKT   &kp LPAR   &kp RPAR       &kp MINUS    &kp N1    &kp N2     &kp N3    &mt RSHFT BSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans        &lt 1 SPACE   &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        controls_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │          │   │          │          │          │          │          │
            &sys_reset  &trans      &trans    &kp LA(LG(PG_UP))  &kp C_NEXT    &kp C_NEXT &kp LA(LG(PG_UP))  &trans     &trans      &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │          │   │          │          │          │          │          │
          &bootloader &out OUT_BLE &trans &kp LA(LG(PG_DN))  &kp C_PREV    &kp C_PREV   &kp LA(LG(PG_DN))  &trans     &sys_reset    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
           &trans     &out OUT_USB  &trans  &kp C_PP   &kp C_PP        &kp C_PP   &kp C_PP   &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                        &kp C_VOL_DN  &kp C_VOL_UP    &kp C_VOL_UP  &kp C_VOL_DN
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // tri_layer {
        //     bindings = <
        // //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        // //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
        //     &reset     &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans      &reset
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
        //   &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
        //     &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
        // //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                      &trans     &trans         &trans     &trans
        // //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        //     >;
        // };

        // system_layer {
        //     bindings = <
        // //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        // //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │          │
        //     &reset   &trans      &trans    &kp LA(LG(PG_UP))  &bt BT_SEL 0   &kp C_NEXT &kp LA(LG(PG_UP))  &trans     &trans      &trans
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │          │
        //   &bootloader &out OUT_BLE &trans &kp LA(LG(PG_DN))  &bt BT_SEL 1   &kp C_PREV   &kp LA(LG(PG_DN))  &trans     &reset    &bootloader
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│          │          │          │          │PROFILE 2 │   │          │          │          │          │          │
        //    &bt BT_CLR  &out OUT_USB  &trans  &trans      &bt BT_SEL 2     &kp C_PP   &kp C_PP     &trans     &trans     &trans
        // //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 &kp C_VOL_DN  &kp C_VOL_UP    &kp C_VOL_UP  &kp C_VOL_DN
        // //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        //     >;
        // };
    };
};
